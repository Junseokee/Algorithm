코딩테스트 준비

코딩테스트 온라인 저지:
해외 : 코드포스, 탑코더, 릿코드, 코드셰프
국내 : 백준온라인저지, 코드업, 프로그래머스, SW Expert Academy

온라인 파이썬 개발환경
리플릿(추천)
파이썬 튜터

오프라인 개발 환경
파이참

복잡도
시간 복잡도 : 알고리즘 수행시간 분석
공간 복잡도 :  알고리즘의 메모리 사용량 분석

Big-O Notation
가장 빠르게 증가하는 항만을 고려함
가장 높은 차수만 남김
성능 순위
O(1) 상수시간 > O(logN) 로그시간 > O(N) 선형시간 > O(NlogN) 로그 선형 시간 > O(N^2) 이차시간 > O(N^3) 삼차 시간 > O(2^n) 지수시간

시간제한이 1초인 문제일때 
N의 범위가 500이면 O(N^3) 가능
N의 범위가 2,000이면 O(N^2) 가능
N의 범위가 100,000이면 O(NlogN) 가능
N의 범위가 10,000,000이면 O(N) 가능

수행시간 측정 소스코드
import time
start_time = time.time() # 측정 시작

# 프로그램 소스코드
end_time = time.time() # 측정 종료
print("time:", end_time - start_time) # 수행시간 출력

-----------------------------------------
지수 표현 방식
10억 = 1e9로 표현 가능
a= int(1e9)

오늘날 가장 널리 쓰이는 IEEE754 표준에서는 실수형을 저장하기위해 고정된 크기의 메모리를 할당
컴퓨터 시스템은 실수 정보를 표현하는 정확도에 한계를 가짐

10진수 체계에서는 소수 계산이 정확하지만
2진수에서는 정확하게 소수를 표현할수 있는 방법 X -> 오차가 발생한다. (round 함수를 활용하는게 좋음)

리스트 컴프리헨션
리스트를 초기화 하는 방법 중 하나
대괄호 안에 조건문과 반복문을 적용해 리스트 초기화
ex) array = [i for i in range(10)]
조건문도 포함 가능
# 홀수만 포함
array = [i for i in range(20) if i % 2 ==1]

리스트 컴프리헨션은 2차원 리스트를 초기화 할때 효과적으로 사용
N x M zmrldml 2차원 리스트를 한번에 초기화 할때 매우 유용
ex) array = [[0] * m for _ in range(n)]
파이썬에서는 반복을 수행하되 반복을 위한 변수의 값을 무시하고자 할때 언더바(_)를 사용

리스트 관련 메서드
append()
sort() <- 오름차순
sort(reverse = True) <- 내림차순
reverse() <- 원소 순서 뒤집기
insert() <- 특정 위치에 원소 삽입
count() <- 특정 값을 가지는 데이터 갯수세기
remove() 

리스트에서 특정 값을 가지는 원소를 모두 제거하는 방법
remove_set = {3,5}

# revmove_list에 포함되지 않은 값만을 저장
result = [i for i in a if i not in remove_set]

튜플 자료형을 사용하는 경우
서로 다른 성질의 데이터를 묶어서 관리해야 할때
최단경로 알고리즘에서는 (비용, 노드번호)의 형태로 튜플 자료형 사용
데이터의 나열을 해싱의 키값으로 사용해야 할때
메모리를 효율적으로 사용해야할때 

사전 자료형의 특징
변경 불가능한 자료형을 키로 사용
파이썬의 사전 자료형은 해시 테이블을 이용하므로 데이터의 조회 및 수정에 있어서 O(1)의 시간 사용

집합 자료형의 특징
집합은 리스트 혹은 문자열을 이용해서 초기화 할 수 있다.
데이터의 조회 및 수정에 있어서 O(1) 시간에 처리
중복 허용 x, 순서가 없다
합집합(a|b), 교집합(a&b), 차집합(a-b) 연산이 가능
관련함수
한개 추가 data.add(4)
여러개 data.update([5,6])
삭제 data.remove()

-----------------------------------------------
입출력 방법
input
map
리스트 입력 받는 방법
data = list(map(int, input().split()))
ㅊ 



